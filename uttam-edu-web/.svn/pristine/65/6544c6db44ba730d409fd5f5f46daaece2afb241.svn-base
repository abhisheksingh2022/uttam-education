package com.hixapi.pmp.struts.reports;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.hixapi.framework.service.ServiceLocator;
import com.hixapi.pmp.api.model.CarrierVO;
import com.hixapi.pmp.api.model.LoginHistoryVO;
import com.hixapi.pmp.api.model.criteria.LoginHistorySearchCriteria;
import com.hixapi.pmp.service.carrier.CarrierService;
import com.hixapi.pmp.service.user.UserService;
import com.hixapi.web.framework.struts.BaseSecureAction;

public class LoginHistoryAction extends BaseSecureAction {
	private static final Logger LOG = LogManager.getLogger(LoginHistoryAction.class);

	/**
	 * 
	 */
	private static final long serialVersionUID = -24331195410300987L;
	private LoginHistorySearchCriteria criteria;
	private List<LoginHistoryVO> loginHistoryList;
	private Boolean isSeacrh;
	private LoginHistoryVO loginHistory = new LoginHistoryVO();

	private List<CarrierVO> carrierList;

	@Override
	protected void loadDisplayContents() throws Exception {
		// TODO Auto-generated method stub
		LOG.entry();
		LOG.exit();
	}

	@Override
	protected String handleExecute() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	public String search() {
		LOG.entry();
		setLoginHistoryList(ServiceLocator.getInstance().getService(UserService.class).searchLoginHistory(criteria));
		setIsSeacrh(true);
		return LOG.exit(FLASH);
	}
	
	public void validate_search(){
		if(criteria == null){
			addValidationError("msg.loginhistory.enter_mandatory_criteria", "criteria.organisation", "criteria.userId");
		}else{
			if(StringUtils.isBlank(criteria.getUserId()) && StringUtils.isBlank(criteria.getOrganisation())){
				addValidationError("msg.loginhistory.enter_mandatory_criteria", "criteria.organisation", "criteria.userId");
			}
			
		}
	}

	public List<CarrierVO> getCarrierList() {
		if (carrierList == null) {
			carrierList = ServiceLocator.getInstance().getService(CarrierService.class).searchCarriers(null);
			if(carrierList == null){
				carrierList = new ArrayList<CarrierVO>();
			}
			CarrierVO dummyVO = new CarrierVO();
			dummyVO.setCarrierId("");
			dummyVO.setCarrierIdNbr("0");
			dummyVO.setCarrierName("Access Health CT");
			carrierList.add(0, dummyVO);
		}
		return carrierList;
	}

	public LoginHistorySearchCriteria getCriteria() {
		return criteria;
	}

	public void setCriteria(LoginHistorySearchCriteria criteria) {
		this.criteria = criteria;
	}

	public Boolean getIsSeacrh() {
		return isSeacrh;
	}

	public void setIsSeacrh(Boolean isSeacrh) {
		this.isSeacrh = isSeacrh;
	}

	public LoginHistoryVO getLoginHistory() {
		return loginHistory;
	}

	public void setLoginHistory(LoginHistoryVO loginHistory) {
		this.loginHistory = loginHistory;
	}

	public List<LoginHistoryVO> getLoginHistoryList() {
		return loginHistoryList;
	}

	public void setLoginHistoryList(List<LoginHistoryVO> loginHistoryList) {
		this.loginHistoryList = loginHistoryList;
	}

}
